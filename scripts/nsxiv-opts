#!/bin/sh

nsxiv_url() {
  cache_dir="${TMPDIR:-/tmp}/nsxiv"

  die() {
    [ -n "$1" ] && printf '%s\n' "$*" >&2;
    exit 1
  }

  cleanup() {
    rm -f -- "$cache_dir"/*
  }

  get_image() (
    cd "$cache_dir" && curl -sSLO "$1"
  )

  [ -z "$1" ] && die "No arguments given"
  trap cleanup EXIT
  [ -d "$cache_dir" ] || mkdir -p -- "$cache_dir" || die
  while [ -n "$1" ]; do
    case "$1" in
      *://*.*) get_image "$1" ;;
      *) echo "Invalid url: $1" >&2 ;;
    esac
    shift
  done

  [ "$(find "$cache_dir" -type f -print | wc -l)" -ne 0 ] &&
    nsxiv -p "$cache_dir"
}

nsxiv_rifle() {
  TMPDIR="${TMPDIR:-/tmp}"
  tmp="$TMPDIR/nsxiv_rifle_$$"

  is_img_extension() {
    grep -iE '\.(jpe?g|png|gif|svg|webp|tiff|heif|avif|ico|bmp)$'
  }

  listfiles() {
    find -L "///${1%/*}" -maxdepth 1 -type f -print |
      is_img_extension | sort | tee "$tmp"
  }

  open_img() {
    # only go through listfiles() if the file has a valid img extension
    if echo "$1" | is_img_extension >/dev/null 2>&1; then
      trap 'rm -f $tmp' EXIT
      count="$(listfiles "$1" | grep -nF "$1")"
    fi
    if [ -n "$count" ]; then
      nsxiv -i -n "${count%%:*}" -- < "$tmp"
    else
      # fallback incase file didn't have a valid extension, or we couldn't
      # find it inside the list
      nsxiv -- "$@"
    fi
  }

  [ "$1" = '--' ] && shift
  case "$1" in
    "") echo "Usage: ${0##*/} PICTURES" >&2; exit 1 ;;
    /*) open_img "$1" ;;
    "~"/*) open_img "$HOME/${1#"~"/}" ;;
    *) open_img "$PWD/$1" ;;
  esac
}

nsxiv_pipe() {
  tmpfile="${TMPDIR:-/tmp}/nsxiv_pipe_$$"
  trap 'rm -f -- $tmpfile' EXIT

  if [ "$#" -eq 0 ]; then
      if [ -t 0 ]; then
          echo "nsxiv-pipe: No arguments provided" >&2; exit 1
      else
          # Consume stdin and put it in the temporal file
          cat > "$tmpfile"
      fi
  fi

  for arg in "$@"; do
      # if it's a pipe then drain it to $tmpfile
      [ -p "$arg" ] && cat "$arg" > "$tmpfile"
  done

  if [ -s "$tmpfile" ]; then
      nsxiv -q "$@" "$tmpfile" # -q to silence warnings
  else
      nsxiv "$@" # fallback
  fi
}

usage() {
  cat <<EOF
Usage:  nsxiv-options [-p FILE(S)] [-u URL] [-r FILE]

Options:
  -p      Pipe images to nsxiv
  -u      Open urls with nsxiv
  -r      Open all images in the same directory
          as given file
EOF
}

main() {
  case "$1" in
    -p) shift ; nsxiv_pipe "$@" ;;
    -u) shift ; nsxiv_url "$@" ;;
    -r) shift ; nsxiv_rifle "$@" ;;
    *) usage ; return 1 ;;
  esac
}

main "$@"
